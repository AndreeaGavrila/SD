Laborator 3: Heap si Sortari

1. Implementati un min-heap cu urmatoarele operatii:
- extragerea minimului din heap O(log n)
- inserarea unei valori in heap O(log n)
Exista dar nu se cere la acest exercitiu o operatie numita heapify care transforma un array in heap in O(n).

2. Implementati heap-sort pentru sortat crescator folosind implementarea de heap de la punctul 1 (cu sau fara heapify).

3. Implementati Count Sort. 
(Se numara elementele intr-un vector de frecvente)

4. Implementati Radix Sort.
(Se sorteaza elementele dupa cea mai nesemnificativa cifra (exemplu: 3254), folosind count sort, rezultand un alt vector; apoi noul vector se sorteaza din nou dupa a doua cifra, a treia, etc. prin aplicatii de count sort)

(Bonus) Implementati Radix sort pe biti, in care in loc sa sortam dupa cea mai nesemnificativa cifra, sortam dupa cei mai nesemnificativi 4 sau 8 biti (de exemplu 3254 = 110010110110)

int x= 3254;
int ultimii8biti= x & 255; // 255 = 11111111
// ultimii8biti =10110110
int shiftat8biti = x >> 8 // shiftat8biti = 1100
